//Imports - NEXT
import Head from "next/head";
import Image from "next/image";
//Import - Axios
import axios from "axios";
//Import - UseState
import { useState } from "react";
//Import - Search Icon
import { BsSearch } from "react-icons/bs";
import Weather from "../components/Weather";
import Spinner from "../components/Spinner";

//Import - Spinner Component

export default function Home() {
  //State - City
  const [city, setCity] = useState("");
  //State - Weather
  const [weather, setWeather] = useState({});
  //State - Loading
  const [loading, setLoading] = useState(false);

  //Function - GetWeather
  const getWeather = async (e) => {
    e.preventDefault();

    //SetLoading - True to start loading
    setLoading(true);

    //Options for api
    const options = {
      method: "GET",
      url: "https://weatherapi-com.p.rapidapi.com/current.json",
      params: { q: city },
      headers: {
        "X-RapidAPI-Key": "dcab4415cemsh2530f94eef60677p151ef4jsn2ae6954c9108",
        "X-RapidAPI-Host": "weatherapi-com.p.rapidapi.com",
      },
    };

    //Get Weather API
    await axios
      .request(options)
      .then(function (response) {
        console.log(response.data);
        //SetWeather State to response object
        setWeather(response.data);
      })
      .catch(function (error) {
        console.error(error);
      });
    setCity("");
    //SetLoading - False to end loading
    setLoading(false);
  };

  return (
    <div>
      {/* Header */}
      <Head>
        <title>WeatherAPI Web App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      {/* Overlay */}
      <div className="absolute top-0 right-0 left-0 bottom-0 bg-black/40 z-[1]" />

      {/* Background Image */}
      <Image
        src="https://images.unsplash.com/photo-1501785888041-af3ef285b470?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=2940&q=80"
        alt="backgroundImage"
        fill
        className="object-cover"
      />
      {/* Search Container */}
      {!loading ? (
        <>
          <div className="relative flex justify-between items-center max-w-[500px] m-auto p-4 text-white z-10">
            <form
              onSubmit={getWeather}
              className="flex justify-between items-center w-full m-auto p-3 bg-transparent border border-gray-300 text-white rounded-2xl "
            >
              <div>
                <input
                  onChange={(e) => {
                    setCity(e.target.value);
                  }}
                  className="bg-transparent border-none text-white focus:outline-none text-2xl"
                  type="text"
                  placeholder="Search City"
                />
              </div>
              <button onClick={getWeather}>
                <BsSearch size={20} />
              </button>
            </form>
          </div>

          {/* Weather Data */}
          {weather.current && <Weather data={weather} />}
        </>
      ) : (
        <Spinner />
      )}
    </div>
  );
}
